package com.section2;

public class MainClass {

	public static void main(String[] args) throws Exception {
		// TODO Auto-generated method stub
		Self user1 = new Self();
		Self user2 = new Self();
		Self user3 = new Self();

		//Section 2 Initiate 3 instance 
		Account acc1 = new Account(user1, "Freddy Mercury", 1000);
		Account acc2 = new Account(user2, "John McAfee", 2000);
		Account acc3 = new Account(user3, "Elon Musk", 3000);
		System.out.println(acc1.toStr(user2));

		
		
		
		System.out.println(acc1.toStr(user2));
		acc3.deposit(user2, 6000);
		System.out.println(acc1.toStr(user2));
		System.out.println("Acc2 before set :");
//		acc3.setBalance(10000);
//		acc3.transfer(user2, 500);
		System.out.println(acc1.toStr(user2));


	}

	static class Self {
		public Self(String name, double balance) {
			this.id = new Timestamp(new Date()).getTime());
			this.name = name;
			this.balance = balance;
		}

		private Long id;
		private String name;
		private double balance;

		public Long getId() {
			return id;
		}

		public void setId(Long id) {
			this.id = id;
		}

		public String getName() {
			return name;
		}

		public void setName(String name) {
			this.name = name;
		}

		public double getBalance() {
			return balance;
		}

		public void setBalance(double balance) {
			this.balance = balance;
		}
	}

	static class Account {
		private Self user;
		public Account(Self user, String name, double balance) {
			this.user = ();
			user.setId(null);
			user.setBalance(balance);
			user.setName(name);
		}
		
		public void deposit(Self user, double amount) {
			user.setBalance(user.getBalance()+amount);
		}
		public void withdraw(Self user, double amount) throws Exception {
			if(user.getBalance()<amount) throw new Exception("Balance is not enough. ");
			user.setBalance(user.getBalance()-amount);
		}
		public String toStr(Self user) {
			return user.name + "'s account. Balance: "+user.balance;
		}
	}
	
	static class DevAccount extends Account{
		private Self user;
		public DevAccount(Self user, String name, double balance) {
			super(user, name, balance);
			this.user = user;
		}
		
		public double getBalance() {
			return user.getBalance();
		}
		
		public void setBalance(double balance) {
			user.setBalance(balance);
		}
		
		public void transfer(Self recipientUser, double amount) throws Exception{
			this.withdraw(user, amount);
			this.deposit(recipientUser, amount);
		}
		
		
	}

}
